name: Deploy Docker App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}"
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          # Debug the SSH setup
          ls -al ~/.ssh
          cat ~/.ssh/id_rsa
      
      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            rm -rf ${{ secrets.APP_PATH }}/*
            mkdir -p ${{ secrets.APP_PATH }}
          EOF

      - name: Copy project to server
        run: |
          rsync -avz --delete ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.APP_PATH }}
      
      - name: Create .env file on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo '${{ secrets.ENV_FILE }}' > '${{ secrets.APP_PATH }}/.env'"

      - name: Build and Run Docker container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "PROJECT_NAME=${GITHUB_REPOSITORY##*/} && cd '${{ secrets.APP_PATH }}' && \
            sudo docker stop \$PROJECT_NAME || true && \
            sudo docker rm \$PROJECT_NAME || true && \
            sudo docker build -t \$PROJECT_NAME:v1 . && \
            sudo docker run -d --name \$PROJECT_NAME --env-file .env --restart unless-stopped -p 3000:3000 \$PROJECT_NAME:v1"
